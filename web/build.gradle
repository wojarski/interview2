buildscript {
    repositories {
        mavenCentral()
        mavenLocal()
    }
    dependencies {
        classpath 'commons-math:commons-math:1.1'
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.2.5.RELEASE")
    }
}


apply plugin: 'java'
//apply plugin: 'war'
apply plugin: 'spring-boot'
//apply plugin: 'application'

//run {/
//    jvmArgs = ['-Xdebug', '-Xrunjdwp:server=y,transport=dt_socket,address=4000,suspend=y']
//}

mainClassName = 'interview.web.Initializer'

repositories {
    mavenCentral()
    mavenLocal()
    maven { url "https://repository.jboss.org/nexus/content/repositories/releases" }
}
dependencies {
    compile 'interview:core:1.0'
    //compile module("commons-lang:commons-lang:2.4") {
    //    dependency("commons-io:commons-io:1.2")
    //}
    compile 'com.h2database:h2:1.3.148'
    compile 'org.springframework:spring-context:4.2.0.RELEASE'
    compile 'org.springframework.data:spring-data-commons:1.10.2.RELEASE'
    compile 'org.springframework:spring-webmvc:4.2.0.RELEASE'
    compile 'javax.servlet:javax.servlet-api:3.1.0'
	compile 'org.aspectj:aspectjtools:1.8.6'
    compile 'log4j:log4j:1.2.17'
    compile 'com.google.guava:guava:18.0'
    
        
    //compile 'org.springframework.boot:spring-boot-autoconfigure:1.2.5.RELEASE'
   // compile 'org.springframework.boot:spring-boot-starter-web:1.2.5.RELEASE'
   
   // tag::jetty[]
    compile("org.springframework.boot:spring-boot-starter-web") {
        //exclude module: "spring-boot-starter-tomcat"
    }
    //compile("org.springframework.boot:spring-boot-starter-jetty")
    // end::jetty[]
    // tag::actuator[]
    compile("org.springframework.boot:spring-boot-starter-actuator")
    // end::actuator[]
    testCompile("junit:junit")
}

//task wrapper(type: Wrapper) {
//    gradleVersion = '2.6'
//}

//war {
//    from 'src/main/webapp' // adds a file-set to the root of the archive
    //webInf { from 'src/additionalWebInf' } // adds a file-set to the WEB-INF dir.
    //classpath fileTree('additionalLibs') // adds a file-set to the WEB-INF/lib dir.
    //classpath configurations.moreLibs // adds a configuration to the WEB-INF/lib dir.
//    webXml = file('src/main/webapp/WEB-INF/web.xml') // copies a file to WEB-INF/web.xml
//}



// Just a smoke test that using this option does not lead to any exception
//compileJava.options.compilerArgs = ['-Xlint:unchecked']
/*
task spiJar(type: Jar) {
    appendix = 'spi'
    from sourceSets.main.output
    include 'org/gradle/api/'
}

artifacts {
  spi spiJar
}
*/
/*
task dist(type: Zip) {
    dependsOn spiJar
    from 'src/dist'
    into('libs') {
        from spiJar.archivePath
        from configurations.runtime
    }
}
*/
/*
artifacts {
    archives dist
}
*/
// We want to test if commons-math was properly added to the build script classpath
//org.apache.commons.math.fraction.Fraction lhs = new org.apache.commons.math.fraction.Fraction(1, 3);
//org.gradle.buildsrc.BuildSrcClass bsc = new org.gradle.buildsrc.BuildSrcClass()

/*task checkProjectDependency(dependsOn: project(':shared').jar) << {
    File cachedSharedJarDir = new File(gradle.gradleUserHomeDir, "cache/multiproject/shared/jars")
    copy {
        from project(':shared').jar.archivePath
        into cachedSharedJarDir
    }
    File sharedJar = configurations.compile.files.find { File file -> file.name.startsWith('shared')}
    assert sharedJar.absolutePath == project(':shared').jar.archivePath.absolutePath
}*/
